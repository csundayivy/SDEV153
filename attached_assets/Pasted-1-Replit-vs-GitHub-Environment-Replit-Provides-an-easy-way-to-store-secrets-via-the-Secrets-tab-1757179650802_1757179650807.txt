1Ô∏è‚É£ Replit vs GitHub Environment

Replit:

Provides an easy way to store secrets via the Secrets tab.

When you set a secret, e.g., OPENAI_API_KEY, Replit injects it directly as an environment variable at runtime.

Your code can just do:

const apiKey = process.env.OPENAI_API_KEY;


and it works automatically.

GitHub Actions / Repository:

GitHub does not automatically see your local .env file in the repository.

You must store secrets in GitHub Actions secrets (under Settings > Secrets and Variables > Actions) and reference them in your workflow YAML file.

2Ô∏è‚É£ Common Reasons API Call Fails on GitHub

Environment Variable Not Set in GitHub Actions

Example: If you do:

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });


But OPENAI_API_KEY is not defined in GitHub Actions, it will fail with:

Error: API key not found


.env File Not Committed / Ignored

Many projects .gitignore the .env file to prevent secrets from leaking.

That‚Äôs fine locally, but GitHub Actions won‚Äôt see it unless you explicitly set the secret in the workflow.

Incorrect Workflow Reference

Example in workflow.yml:

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}


Then in your JS code:

const apiKey = process.env.OPENAI_API_KEY;


If this line is missing or misnamed, it won‚Äôt work.

3Ô∏è‚É£ How to Fix

Add Your Secret in GitHub

Go to your repo ‚Üí Settings ‚Üí Secrets and Variables ‚Üí Actions ‚Üí New repository secret

Name: OPENAI_API_KEY

Value: Your actual OpenAI key

Reference the Secret in Your Workflow

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Run Script
        run: node index.js


Access in Code

import OpenAI from "openai";

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

‚ö†Ô∏è Key Differences
Feature	Replit	GitHub Actions
Secrets storage	Replit Secrets tab	GitHub Actions Secrets
.env files automatically loaded	Yes	No (needs dotenv or workflow env)
Environment variables in runtime	Injected automatically	Must be explicitly set in workflow

üí° Tip: If your GitHub workflow runs a script and the API call fails, 99% of the time it‚Äôs because the API key isn‚Äôt set as a workflow environment variable.